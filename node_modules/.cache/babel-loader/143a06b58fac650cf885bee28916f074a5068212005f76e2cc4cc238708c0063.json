{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJECTS\\\\CHAT  APP - REACT\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { AppWrapper } from \"./components/AppWrapper\";\nimport backgroundImage from \"./image/aurora.jpg\"; // Import the background image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApp() {\n  _s();\n  const [room, setRoom] = useState(\"\");\n  const [isInChat, setIsInChat] = useState(false); // Assume user is entering chat\n\n  const handleEnterChat = () => {\n    if (room.trim() === \"\") {\n      alert(\"Please type the room name\");\n      return;\n    }\n    setIsInChat(true);\n  };\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      handleEnterChat();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-image\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialogue-box\",\n        children: !isInChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Type room name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setRoom(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: \"Enter room name..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEnterChat,\n            children: \"Enter Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n          room: room,\n          setIsInChat: setIsInChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"rt63sK/0mJ2qPKQcG8Hetg9TN2M=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","Chat","AppWrapper","backgroundImage","ChatApp","room","setRoom","isInChat","setIsInChat","handleEnterChat","trim","alert","handleKeyDown","event","key","position","top","left","width","height","backgroundSize","backgroundPosition","zIndex","e","target","value"],"sources":["C:/PROJECTS/CHAT  APP - REACT/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Chat } from \"./components/Chat\";\nimport { AppWrapper } from \"./components/AppWrapper\";\nimport backgroundImage from \"./image/aurora.jpg\"; // Import the background image\n\nfunction ChatApp() {\n  const [room, setRoom] = useState(\"\");\n  const [isInChat, setIsInChat] = useState(false); // Assume user is entering chat\n\n  const handleEnterChat = () => {\n    if (room.trim() === \"\") {\n      alert(\"Please type the room name\");\n      return;\n    }\n    setIsInChat(true);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      handleEnterChat();\n    }\n  };\n\n  return (\n    <AppWrapper>\n      <div\n        className=\"background-image\"\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          backgroundImage: `url(${backgroundImage})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          zIndex: -1,\n        }}\n      />\n      <div className=\"container\">\n        <div className=\"dialogue-box\">\n          {!isInChat ? (\n            <div className=\"room\">\n              <h2>Type room name:</h2>\n              <input\n                type=\"text\"\n                onChange={(e) => setRoom(e.target.value)}\n                onKeyDown={handleKeyDown}\n                placeholder=\"Enter room name..\"\n              />\n              <button onClick={handleEnterChat}>Enter Chat</button>\n            </div>\n          ) : (\n            <Chat room={room} setIsInChat={setIsInChat} />\n          )}\n        </div>\n      </div>\n    </AppWrapper>\n  );\n}\n\nexport default ChatApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,UAAU,QAAQ,yBAAyB;AACpD,OAAOC,eAAe,MAAM,oBAAoB,CAAC,CAAC;AAAA;AAElD,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMS,eAAe,GAAG,MAAM;IAC5B,IAAIJ,IAAI,CAACK,IAAI,EAAE,KAAK,EAAE,EAAE;MACtBC,KAAK,CAAC,2BAA2B,CAAC;MAClC;IACF;IACAH,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMI,aAAa,GAAIC,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzBL,eAAe,EAAE;IACnB;EACF,CAAC;EAED,oBACE,QAAC,UAAU;IAAA,wBACT;MACE,SAAS,EAAC,kBAAkB;MAC5B,KAAK,EAAE;QACLM,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdhB,eAAe,EAAG,OAAMA,eAAgB,GAAE;QAC1CiB,cAAc,EAAE,OAAO;QACvBC,kBAAkB,EAAE,QAAQ;QAC5BC,MAAM,EAAE,CAAC;MACX;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB;QAAK,SAAS,EAAC,cAAc;QAAA,UAC1B,CAACf,QAAQ,gBACR;UAAK,SAAS,EAAC,MAAM;UAAA,wBACnB;YAAA,UAAI;UAAe;YAAA;YAAA;YAAA;UAAA,QAAK,eACxB;YACE,IAAI,EAAC,MAAM;YACX,QAAQ,EAAGgB,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;YACzC,SAAS,EAAEb,aAAc;YACzB,WAAW,EAAC;UAAmB;YAAA;YAAA;YAAA;UAAA,QAC/B,eACF;YAAQ,OAAO,EAAEH,eAAgB;YAAA,UAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACjD,gBAEN,QAAC,IAAI;UAAC,IAAI,EAAEJ,IAAK;UAAC,WAAW,EAAEG;QAAY;UAAA;UAAA;UAAA;QAAA;MAC5C;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEjB;AAAC,GAtDQJ,OAAO;AAAA,KAAPA,OAAO;AAwDhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}